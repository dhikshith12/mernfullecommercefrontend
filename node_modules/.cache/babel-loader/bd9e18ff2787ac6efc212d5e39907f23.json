{"ast":null,"code":"import { API } from \"../../backend\";\nexport const createCategory = (userId, token, categoryName) => {\n  return fetch(`${API}/category/create/${userId}`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(categoryName)\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const getAllCategories = () => {\n  return fetch(`{API}/categories`, {\n    method: \"GET\"\n  }).then(response => {\n    return response.json();\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const getAllProducts = () => {\n  return fetch(`{API}/products`, {\n    method: \"GET\"\n  }).then(response => {\n    return response.json();\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const createProduct = (userId, token, product) => {\n  return fetch(`${API}/product/create/${userId}`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: product\n  }).then(response => {\n    return response.json();\n  }).catch(err => {\n    console.log(err);\n  });\n}; //delete a product\n\nexo; //get a product\n\nexport const getProduct = productId => {\n  return fetch(`{API}/product/${productId}`, {\n    method: \"GET\"\n  }).then(response => {\n    return response.json();\n  }).catch(err => {\n    console.log(err);\n  });\n}; //update a product\n\nexport const updateProduct = (productId, userId, token, product) => {\n  return fetch(`${API}/product/${productId}/${userId}`, {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: product\n  }).then(response => {\n    return response.json();\n  }).catch(err => {\n    console.log(err);\n  });\n};","map":{"version":3,"sources":["C:/Users/Dhikshith/Desktop/..dev/MERN/prodfrontend/src/admin/helper/adminapicall.js"],"names":["API","createCategory","userId","token","categoryName","fetch","method","headers","Accept","Authorization","body","JSON","stringify","then","response","json","catch","err","console","log","getAllCategories","getAllProducts","createProduct","product","exo","getProduct","productId","updateProduct"],"mappings":"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","sourcesContent":["import {API} from \"../../backend\"\r\n\r\nexport const createCategory = (userId, token, categoryName)=>{\r\n    return fetch(`${API}/category/create/${userId}`,{\r\n        method:\"POST\",\r\n        headers:{\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n                },\r\n        body: JSON.stringify(categoryName)\r\n    })\r\n    .then(response=>{\r\n        return response.json();\r\n    })\r\n    .catch(err=> console.log(err))\r\n}\r\n\r\nexport const getAllCategories = ()=>{\r\n    return fetch(`{API}/categories`,{\r\n        method: \"GET\",\r\n    }).then(response=>{\r\n        return response.json()\r\n    }).catch(err => {\r\n        console.log(err)\r\n    })\r\n}\r\n\r\nexport const getAllProducts = ()=>{\r\n    return fetch(`{API}/products`,{\r\n        method: \"GET\",\r\n    }).then(response=>{\r\n        return response.json()\r\n    }).catch(err => {\r\n        console.log(err)\r\n    })\r\n}\r\n\r\nexport const createProduct = (userId, token, product)=>{\r\n    return fetch(`${API}/product/create/${userId}`,{\r\n        method:\"POST\",\r\n        headers:{\r\n            Accept: \"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body:product\r\n    }).then(response => {\r\n        return response.json()\r\n    }).catch(err => {\r\n        console.log(err)\r\n    })\r\n\r\n}\r\n\r\n//delete a product\r\nexo\r\n\r\n\r\n//get a product\r\nexport const getProduct = productId =>{\r\n    return fetch(`{API}/product/${productId}`,{\r\n        method: \"GET\"\r\n    }).then(response => {\r\n        return response.json()\r\n    }).catch(err => {\r\n        console.log(err)\r\n    })\r\n}\r\n\r\n//update a product\r\n\r\nexport const updateProduct = (productId,userId, token, product)=>{\r\n    return fetch(`${API}/product/${productId}/${userId}`,{\r\n        method:\"PUT\",\r\n        headers:{\r\n            Accept: \"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body:product\r\n    }).then(response => {\r\n        return response.json()\r\n    }).catch(err => {\r\n        console.log(err)\r\n    })\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}