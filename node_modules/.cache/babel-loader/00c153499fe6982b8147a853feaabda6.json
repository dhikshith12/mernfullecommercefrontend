{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Dhikshith\\\\Desktop\\\\..dev\\\\MERN\\\\prodfrontend\\\\src\\\\user\\\\Signin.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Base from \"../core/Base\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { signin, authenticate, isAuthenticated } from \"../auth/helper\";\n\nconst SignIn = () => {\n  _s();\n\n  const [values, setValues] = useState({\n    email: \"danny@gmail.com\",\n    password: \"12345\",\n    loading: false,\n    didRedirect: false\n  });\n  const {\n    email,\n    password,\n    error,\n    loading,\n    didRedirect\n  } = values;\n  const {\n    user\n  } = isAuthenticated();\n\n  const handleChange = name => event => {\n    setValues({ ...values,\n      error: false,\n      [name]: event.target.value\n    });\n  };\n\n  const onSumbit = event => {\n    event.preventDefault();\n    setValues({ ...values,\n      error: false,\n      loading: true\n    });\n    signin({\n      email,\n      password\n    }).then(data => {\n      if (data.error) {\n        setValues({ ...values,\n          error: data.error,\n          loading: false\n        });\n      } else {\n        authenticate(data, () => {\n          setValues({ ...values,\n            name: \"\",\n            email: \"\",\n            password: \"\",\n            error: \"\",\n            didRedirect: true\n          });\n        });\n      }\n    }).catch(console.log(\"signin request failed\"));\n  };\n\n  const performRedirect = () => {\n    if (didRedirect) {\n      if (user && user.role === 1) {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/admin/dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 24\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/user/dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 24\n        }, this);\n      }\n    }\n  };\n\n  const loadinMessage = () => {\n    return loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-info\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this);\n  };\n\n  const errorMessage = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6 offset-sm-3 text-left\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-danger\",\n          style: {\n            display: error ? \"\" : \"none\"\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this);\n  };\n\n  const signInForm = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6 offset-sm-3 text-left\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text-light\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: handleChange(\"email\"),\n              className: \"form-control\",\n              type: \"email\",\n              value: email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text-light\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: handleChange(\"password\"),\n              className: \"form-control\",\n              type: \"password\",\n              value: password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onSumbit,\n            className: \"btn btn-success btn-block\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Base, {\n    title: \"SignIn page\",\n    description: \"A page for user to sign In!\",\n    children: [loadinMessage(), errorMessage(), signInForm(), performRedirect(), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-white text-center\",\n      children: JSON.stringify(values)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SignIn, \"7Gyq4Ts7/WkQ+IWjhq7Nyp3eq58=\");\n\n_c = SignIn;\nexport default SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["C:/Users/Dhikshith/Desktop/..dev/MERN/prodfrontend/src/user/Signin.js"],"names":["React","useState","Base","Link","Redirect","signin","authenticate","isAuthenticated","SignIn","values","setValues","email","password","loading","didRedirect","error","user","handleChange","name","event","target","value","onSumbit","preventDefault","then","data","catch","console","log","performRedirect","role","loadinMessage","errorMessage","display","signInForm","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\r\nimport Base from \"../core/Base\"\r\nimport { Link , Redirect} from \"react-router-dom\"\r\nimport {signin, authenticate, isAuthenticated} from \"../auth/helper\"\r\n\r\n\r\nconst SignIn = () => {\r\n\r\n    const [values, setValues] = useState({\r\n        email: \"danny@gmail.com\",\r\n        password: \"12345\",\r\n        loading:  false,\r\n        didRedirect: false\r\n    })\r\n\r\n    const {email, password, error, loading, didRedirect} = values\r\n    const {user}=isAuthenticated();\r\n\r\n    const handleChange = name => event => {\r\n        setValues({...values, error: false, [name]: event.target.value})\r\n    }\r\n\r\n    const onSumbit = event=> {\r\n        event.preventDefault();\r\n        setValues({...values, error: false, loading:true})\r\n        signin({email,password})\r\n        .then(data=>{\r\n            if(data.error){\r\n                setValues({...values, error: data.error,loading:false})\r\n            }else{\r\n                authenticate(data, ()=>{\r\n                    setValues({\r\n                        ...values,\r\n                        name: \"\",\r\n                        email: \"\",\r\n                        password: \"\",\r\n                        error: \"\",\r\n                        didRedirect: true\r\n                    })\r\n                })\r\n            }\r\n        })\r\n        .catch(console.log(\"signin request failed\"))\r\n    }\r\n    const performRedirect = ()=>{\r\n        if(didRedirect){\r\n            if(user&&user.role===1){\r\n                return <Redirect to=\"/admin/dashboard\"/>\r\n            }else{\r\n                return <Redirect to=\"/user/dashboard\"/>\r\n            }\r\n        }\r\n        \r\n    }\r\n    const loadinMessage =()=>{\r\n        return(\r\n            loading && (\r\n                <div className=\"alert alert-info\">\r\n                    <h2>Loading...</h2>\r\n                </div>\r\n            )\r\n        )\r\n    }\r\n    const errorMessage =()=>{\r\n       return( \r\n        <div className=\"row\">\r\n        <div className=\"col-md-6 offset-sm-3 text-left\">\r\n           <div className=\"alert alert-danger\"\r\n            style={{display:error? \"\":\"none\"}}>\r\n                {error}\r\n            </div>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n    const signInForm = () => {\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 offset-sm-3 text-left\">\r\n                    <form>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"text-light\">Email</label>\r\n                            <input onChange={handleChange(\"email\")} className=\"form-control\" type=\"email\" value={email} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"text-light\">Password</label>\r\n                            <input onChange={handleChange(\"password\")} className=\"form-control\" type=\"password\" value={password}/>\r\n                        </div>\r\n                        <button onClick={onSumbit} className=\"btn btn-success btn-block\">Submit</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <Base title=\"SignIn page\" description=\"A page for user to sign In!\">\r\n            {loadinMessage()}\r\n            {errorMessage()}\r\n            {signInForm()}\r\n            {performRedirect()}\r\n            <p className=\"text-white text-center\">{JSON.stringify(values)}</p>\r\n        </Base>\r\n    )\r\n}\r\n\r\nexport default SignIn"]},"metadata":{},"sourceType":"module"}